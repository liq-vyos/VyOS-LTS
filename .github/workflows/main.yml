name: Build VyOS LTS

env:
  REPO_URL: https://github.com/vyos/vyos-build
  REPO_GIT: https://github.com/vyos/vyos-build.git
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  DELETE_OLD_WORKFLOWS: true
  DELETE_OLD_RELEASES: true
  
on:
  push:
  schedule:
    - cron: '0 0 * * 0'  # Run build every week

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Build vyos-build docker image
      id: build-docker
      run: |
        git clone -b current --single-branch https://github.com/vyos/vyos-build.git
        cd vyos-build
        docker build -t vyos-builder docker
 
    - name: Build iso
      id: build-iso
      if: steps.build-docker.conclusion == 'success' && !cancelled()
      run: |
        [ "$(basename "$PWD")" != "vyos-build" ] && cd vyos-build
        # docker run --rm --privileged -v $(pwd):/vyos -w /vyos vyos/vyos-build:current bash
        # For VyOS 1.4 (sagitta)  $ os=buster64 branch=sagitta make build
        #docker run --rm --privileged -v $(pwd)/vyos-build:/vyos -w /vyos vyos-builder bash -c 'os=buster64 branch=sagitta make build && ./configure --architecture amd64 --build-type release && sudo make iso'
        #docker run --rm --privileged -v $(pwd):/vyos -w /vyos vyos/vyos-build:current bash -c 'os=buster64 branch=current make build && ./configure --architecture amd64 --build-type release && sudo make iso'
        docker run --rm --privileged -v $(pwd):/vyos -w /vyos vyos/vyos-build:current bash -c 'os=buster64 branch=current sudo make iso'
        #echo "status=success" >>$GITHUB_OUTPUT
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >>$GITHUB_ENV
 
    - name: Check space usage
      id: check-usage
      if: steps.build-iso.conclusion == 'success' && (!cancelled())
      run: |
        pwd; ls -al
        df -hT
        echo "ACTIONS_RUNNER_DEBUG=true" >> "$GITHUB_ENV"
        echo "ACTIONS_STEP_DEBUG=true" >> "$GITHUB_ENV"
 
    - name: Persist created iso
      id: persist-iso
      uses: actions/upload-artifact@main
      if: steps.check-usage.conclusion == 'success' && env.UPLOAD_BIN_DIR == 'true' && !cancelled()
      with:
        name: vyos-lts_${{ env.FILE_DATE }}
        path: 'vyos-build/build/live-image-amd64.hybrid.iso'

    - name: Generate release tag
      id: tag
      if: steps.persist-iso.conclusion == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: >
          echo "RELEASE_TAG=_$(date +"%Y.%m.%d-%H%M")" >> "$GITHUB_ENV"

          touch release.txt

          #[ $UPLOAD_COWTRANSFER = true ] && echo "ðŸ”— [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt

          #[ $UPLOAD_WETRANSFER = true ] && echo "ðŸ”— [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt

    - name: Upload firmware to release
      id: upload-release
      uses: softprops/action-gh-release@v1
      if: (!cancelled()) && steps.tag.conclusion == 'success' && env.UPLOAD_RELEASE == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # tag_name: ${{ steps.tag.outputs.release_tag }}
        tag_name: ${{ env.RELEASE_TAG }}
        body_path: release.txt
        files: vyos-build/build/*

    - name: Delete workflow runs
      id: delete-workflows
      uses: GitRML/delete-workflow-runs@main
      if: (!cancelled()) && steps.upload-release.conclusion == 'success' && env.DELETE_OLD_WORKFLOWS == 'true'
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      id: delete-releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: (!cancelled()) && steps.delete-workflows.conclusion == 'success' && env.DELETE_OLD_RELEASES == 'true'
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   
