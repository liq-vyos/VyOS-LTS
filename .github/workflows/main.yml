name: Build VyOS LTS

env:
  REPO_URL: https://github.com/vyos/vyos-build
  REPO_GIT: https://github.com/vyos/vyos-build.git
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  AUTHOR_NAME: ${{ github.event.head_commit.author.name }}
  AUTHOR_EMAIL: ${{ github.event.head_commit.author.email }}
  DELETE_OLD_WORKFLOWS: true
  DELETE_OLD_RELEASES: true

on:
  push:
  schedule:
    - cron: '0 0 * * 0' # Run build every week

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Build vyos-build Docker image
        id: build-docker
        run: |
          git clone -b current --single-branch https://github.com/vyos/vyos-build.git
          cd vyos-build
          docker build -t vyos-builder docker
        continue-on-error: false

      - name: Build ISO
        id: build-iso
        if: steps.build-docker.outcome == 'success' && !cancelled()
        run: |
          cd vyos-build
          docker run --rm --privileged -v $(pwd):/vyos -w /vyos vyos/vyos-build:current bash -c 'os=buster64 branch=current sudo make iso'
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: Check space usage
        if: always()
        run: df -hT

      - name: Delete old artifacts
        if: env.DELETE_OLD_WORKFLOWS == 'true'
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const runsResponse = await github.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            for (const workflow_run of runsResponse.data.workflow_runs) {
              if (workflow_run.name === '${{ github.workflow }}' && workflow_run.status !== 'in_progress') {
                console.log(`Deleting artifacts from workflow run ${workflow_run.id}`);
                const artifacts = await github.actions.listWorkflowRunArtifacts({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: workflow_run.id,
                });
                for (const artifact of artifacts.data.artifacts) {
                  console.log(`Deleting artifact with id ${artifact.id}`);
                  await github.actions.deleteArtifact({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    artifact_id: artifact.id,
                  });
                }
              }
            }

      - name: Upload ISO as artifact
        if: steps.build-iso.outcome == 'success' && env.UPLOAD_BIN_DIR == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: vyos-lts_${{ env.FILE_DATE }}
          path: vyos-build/build/live-image-amd64.hybrid.iso

      - name: Generate release tag
        id: generate-tag
        if: steps.upload-artifact.outcome == 'success' && env.UPLOAD_RELEASE == 'true'
        run: |
          echo "::set-output name=release_tag::$(date +'%Y.%m.%d-%H%M')"

      - name: Upload firmware to release
        if: steps.generate-tag.outcome == 'success' && env.UPLOAD_RELEASE == 'true'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate-tag.outputs.release_tag }}
          files: vyos-build/build/*

      - name: Delete old workflow runs
        if: env.DELETE_OLD_WORKFLOWS == 'true'
        uses: GitRML/delete-workflow-runs@v1
        with:
          retain_days: 1
          keep_minimum_runs: 3

      - name: Remove old releases
        if: env.DELETE_OLD_RELEASES == 'true'
        uses: dev-drprasad/delete-older-releases@v0.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          keep_latest: 3
          delete_tags: true